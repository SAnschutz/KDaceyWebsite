%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 12.0.1
%%For: (DM) (HEAVEN)
%%Title: (cupk_f_pink_N.eps)
%%CreationDate: 6/13/2010 9:45 AM
%%BoundingBox: 23 73 575 665
%%HiResBoundingBox: 23.9858 73.8896 574.8545 664.6646
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_screens_AI5 1.0 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%CMYKCustomColor: 1 1 1 1 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: -8.3623 24.9448 603.6377 816.9448
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595.2756 841.8898
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 0 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 2
%AI8_OpenToView: -307 821.8896 0.5 778 441 26 0 0 8 115 0 0
%AI5_OpenViewLayers: 77
%%PageOrigin:-32 11.8896
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_screens_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Custom Halftone Screens ProcSet)
%%Version: 1.2 0
%%CreationDate: (03/24/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
systemdict begin
userdict /Adobe_screens_AI5 15 dict dup begin
put
/initialize
{
	Adobe_screens_AI5 begin
	/screenid
		deviceDPI 600 gt composite? not or
		{
		-1
		}
		{
			deviceDPI currentScreenFreq 
			dup dup 60 ge exch 150 le and deviceDPI 300 le and
		{
			pop 60
		} if
		div 1.41421 div 0.5 add cvi
		} ifelse
	def
	
	2 screenid eq
	{
		/customsize 16 def
		/customdata /customdata2 def
		setcustomscreen
	} if
	
	3 screenid eq
	{
		/customsize 24 def
		/customdata /customdata3 def
		setcustomscreen
	} if
	
	4 screenid eq
	{
		/customsize 16 def
		/customdata /customdata4 def
		setcustomscreen
	} if
	
	5 screenid eq
	{
		/customsize 20 def
		/customdata /customdata5 def
		setcustomscreen
	} if
	
	6 screenid eq
	{
		/customsize 24 def
		/customdata /customdata6 def
		setcustomscreen
	} if
	
	7 screenid eq
	{
		/customsize 28 def
		/customdata /customdata7 def
		setcustomscreen
	} if
	
	8 screenid eq
	{
		/customsize 16 def
		/customdata /customdata8 def
		setcustomscreen
	} if
} def
/terminate
{
	currentdict Adobe_screens_AI5 eq
	{
	 end
	} if
} def
/setcustomscreen
{
	deviceDPI customsize div 0
	{
		1 add 2 div customsize mul cvi exch
		1 add 2 div customsize mul cvi exch
		customsize mul add
		customdata load exch get 256 div
	} setscreen
} def
/customdata2 28 28 mul string def
currentfile customdata2 readhexstring
4180E8694988E2634382EA6B4B8AE061A01939C8A81737C2A21B3BCAAA1636C0
F8795998F6775796FA7B5B9AF57656952ED8B80727D6B60F2FDABA0626D5B50E
4E8DE6674786EE6F4F8EE5664685ED6EAD1434C6A61F3FCEAE1232C5A51E3ECD
F3745493FE7F5F9EF1725291FD7E5E9D24D3B30C2CDEBE0222D1B10A2ADDBD04
4483EB6C4C8BE1624281E96A4A89E364A31C3CCBAB1535C1A11A3AC9A91838C3
FB7C5C9BF4755594F97A5A99F778589730DBBB0525D4B40D2DD9B90828D7B710
508FE4654584EC6D4D8CE7684887EF70AF1131C4A41D3DCCAC1333C7A72040CF
F0715190FC7D5D9CF2735392FF80609F21D0B00929DCBC0323D2B20B2BDFBF01
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata3 28 28 mul string def
currentfile customdata3 readhexstring
011DC7F5E73D0421CBF3E43A021EC8F6E83E0522CCF2E43A2B648BC4A0762F68
8AC39E732C658CC5A177306989C29D72D5B6521A6192D9B55219608FD6B6531B
6193DAB451185F8FFCEE440C28D2FCED430B27D1FDEF450C29D3FBEC420A26D0
BEA77D366F83BCA77C356E87BFA87E377082BBA67B346D86145B99E0AE4A1259
98DFB14E155C9AE1AD4A115897DEB04D0623CDF4E63C0420CAF8EA400723CDF4
E53B031FC9F7E93F316988C19F752E678EC6A378326A88C09F742D668DC6A278
DBB350175E91D8B8551C6395DCB24F165D90D7B7541C6294FAEC420925CFFFF1
470E2BD5F9EB410824CEFEF0460D2AD4BAA57A336C85BEAA80397180B9A47933
6B84BDA97F387181105797DDAF4C145A9CE3AB480F5696DDAE4B13599BE2AC49
021EC8F6E83E0522CCF2E43A011DC7F5E73D0421CBF3E43A2C658CC5A1773069
89C29D722B648BC4A0762F688AC39E73D6B6531B6193DAB451185F8FD5B6521A
6192D9B55219608FFDEF450C29D3FBEC420A26D0FCEE440C28D2FCED430B27D1
BFA87E377082BBA67B346D86BEA77D366F83BCA77C356E87155C9AE1AD4A1158
97DEB04D145B99E0AE4A125998DFB14E0723CDF4E53B031FC9F7E93F0623CDF4
E63C0420CAF8EA40326A88C09F742D668DC6A278316988C19F752E678EC6A378
DCB24F165D90D7B7541C6294DBB350175E91D8B8551C6395F9EB410824CEFEF0
460D2AD4FAEC420925CFFFF1470E2BD5B9A479336B84BDA97F387181BAA57A33
6C85BEAA803971800F5696DDAE4B13599BE2AC49105797DDAF4C145A9CE3AB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata4 28 28 mul string def
currentfile customdata4 readhexstring
1139B8E0FAD2531B133BBAE2F8D05119417180A6AE9A7B4B437382A5AD987949
C08867272F6F92CAC28A66262E6E90C8E8DE5F070F37B6F2EADD5E060E36B5F0
FED6571F173FBEE6FDD5561E163EBDE5AB9E7F4F477786A1A99D7E4E467685A3
2C6C96CEC68E62222A6A95CDC58D64240C34B3F6EED95A020A32B1F5EDDB5C04
143CBBE3F9D1521A123AB9E1FBD3541C447483A4AC997A4A427281A7AF9B7C4C
C38B65252D6D91C9C1896828307093CBEBDC5D050D35B4F1E9DF60081038B7F3
FCD4551D153DBCE4FFD758201840BFE7A89C7D4D457584A2AA9F8050487887A0
296994CCC48C63232B6B97CFC78F61210931B0F4ECDA5B030B33B2F7EFD85901
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata5 28 28 mul string def
currentfile customdata5 readhexstring
010B34C3EBFCF7CE3F16020C35C4EDFBF6CD3E15102552A4D6EADDB5632B1126
54A5D5EADCB3622A3958768499C19E8C7C5E3A59778498C19D8B7B5DC8A99370
47334C7587AFC9AA936F46324B7485AEF1E5BC6B1E0A2351A3D8F2E4BC6A1E09
2351A2D7FFF9D14219050F38C6EFFEF9D04118040E37C6EFE8E0B7662D142856
A8D3E7DFB7652D132856A7D4BF9C8E7F603D5B7A8195BE9A8E7E603C5B798297
314A7389B2CCAD906D442F497289B1CBAC926E4508214FA1DBF4E2B9671B0720
4EA0DAF4E3BA691C030D36C5EDFBF6CD3F16010C34C3ECFDF8CF4017122654A6
D4E9DDB4622A112553A5D6EBDEB5642C3B59788397C09C8B7C5D3A58778599C2
9E8C7D5FCAAB926E46314B7486AFC8AA947048334D7587B0F2E4BB691D082250
A1D8F1E6BD6B1F0A2452A3D9FDF8CF4118030E36C5EEFFFAD1421A050F38C7F0
E6DFB6642C132755A7D3E8E1B8662E152957A8D2BE9A8D7E5F3B5A798296BF9B
8F80613D5C7B80952F487188B1CAAC916D443049728AB3CCAE906C43061F4D9F
DAF3E2BA681C07214FA0DBF5E1B8671A00000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata6 28 28 mul string def
currentfile customdata6 readhexstring
081A44B6E0F2FDECC150250C091B45B6E1F3FCEBC04F240C1D336199C7D8DCD3
A56C37221E33619AC8D7DBD2A46B36214864798091AEB1958C7E694C49657A81
90ADB0948B7D684BB99D8475593C405C7888A1BEBA9E8574583B3F5B7888A0BD
E4CBAA712E1215326098CFE8E4CCA9712D1114315F97CEE7F5F1C6552B040719
43B5DFFAF6F0C6542A03061842B4DEF9FFEDC352270E0B1C47B8E3F4FEECC251
260D0A1C46B7E2F4DAD5A76E39232035639CCAD5D9D4A66D38231F34629BC9D6
AF938E806A4E4A677C838FABAE928D7F694D4A667B828FAC3E5A778AA3BFBC9F
8772563A3D597689A2BEBB9F8673573A14305E97D1EAE6CDA76F2B0F132F5D96
D0E9E5CDA8702C10051742B3DDFCF8EEC4522801041641B2DDFBF7EFC5532902
091B45B6E1F3FCEBC04F240C081A44B6E0F2FDECC150250C1E33619AC8D7DBD2
A46B36211D336199C7D8DCD3A56C372249657A8190ADB0948B7D684B48647980
91AEB1958C7E694CBA9E8574583B3F5B7888A0BDB99D8475593C405C7888A1BE
E4CCA9712D1114315F97CEE7E4CBAA712E1215326098CFE8F6F0C6542A030618
42B4DEF9F5F1C6552B04071943B5DFFAFEECC251260D0A1C46B7E2F4FFEDC352
270E0B1C47B8E3F4D9D4A66D38231F34629BC9D6DAD5A76E39232035639CCAD5
AE928D7F694D4A667B828FACAF938E806A4E4A677C838FAB3D597689A2BEBB9F
8673573A3E5A778AA3BFBC9F8772563A132F5D96D0E9E5CDA8702C1014305E97
D1EAE6CDA76F2B0F041641B2DDFBF7EFC5532902051742B3DDFCF8EEC4522801
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
/customdata7 28 28 mul string def
currentfile customdata7 readhexstring
01061B44B7E1F5FEFBE6BD4A210C01071B45B8E1F6FDFBE6BC4A200B09132A54
A7D1EAF5EED9B05D331609142B55A8D2EAF4EED9AF5C32161D2D3D6993C1CBE0
CEC59B7140301E2E3D6A93C0CADFCDC49A713F3047576C7B828DA2B6A48F867E
6F5A48576C7C828CA1B6A38F867E6E59BAAA958A78634E4451667A8498ADBAAB
968977624E4350657A8398ADE3D4C99F7539251A273C6892C2D7E4D4C89E7539
241A273B6891C1D6F8F2DDB460371005122A53A7D0ECF9F2DDB360360F051229
53A6D0EBFFFDE8BE4C220D03081D46B9E3F7FFFCE7BD4B210D02071C46B8E2F7
F3F0DBB15E34180B152C56A9D3E8F3EFDAB05D34170A142C55A9D2E9DFCCC69C
7341321F2F3F6B94BFC9DECCC59C7241311F2E3E6A94BFCAB5A38E8780705B49
596D7D808BA0B4A28D877F6F5B48586D7C818BA043506479859AAFBCAC978876
614C424F64798499AEBBAB968977624D19263B6791C3D8E5D6C79D7337231825
3A6690C3D7E5D5C79E74382304112952A5CFEDFAF0DBB25E350E03102851A5CE
ECF9F1DCB25F360E01071B45B8E1F6FDFBE6BC4A200B01061B44B7E1F5FEFBE6
BD4A210C09142B55A8D2EAF4EED9AF5C321609132A54A7D1EAF5EED9B05D3316
1E2E3D6A93C0CADFCDC49A713F301D2D3D6993C1CBE0CEC59B71403048576C7C
828CA1B6A38F867E6E5947576C7B828DA2B6A48F867E6F5ABAAB968977624E43
50657A8398ADBAAA958A78634E4451667A8498ADE4D4C89E7539241A273B6891
C1D6E3D4C99F7539251A273C6892C2D7F9F2DDB360360F05122953A6D0EBF8F2
DDB460371005122A53A7D0ECFFFCE7BD4B210D02071C46B8E2F7FFFDE8BE4C22
0D03081D46B9E3F7F3EFDAB05D34170A142C55A9D2E9F3F0DBB15E34180B152C
56A9D3E8DECCC59C7241311F2E3E6A94BFCADFCCC69C7341321F2F3F6B94BFC9
B4A28D877F6F5B48586D7C818BA0B5A38E8780705B49596D7D808BA0424F6479
8499AEBBAB968977624D43506479859AAFBCAC978876614C18253A6690C3D7E5
D5C79E74382319263B6791C3D8E5D6C79D73372303102851A5CEECF9F1DCB25F
360E04112952A5CFEDFAF0DBB25E350E
pop pop
/customdata8 28 28 mul string def
currentfile customdata8 readhexstring
050F2747B6D6EEF8FEF4DCBC4D2D1507111D375F9EC6E0E9EBE6CCA4653D1F13
2939556F8EA8C1D1D3C3AE9475573B2B4961717D808999B1B39B8B867F73634B
B8A090827A6A5A42445C6C7C8492A2BAD8C8AA97785232222434546E8DACCADA
F0E2CFA768401A0A0C1C365E9DC5E4F2FAF7DFBF50301802040E2646B5D5EDFC
FFF5DDBD4E2E160806102848B7D7EFF9EAE7CDA5663E2014121E38609FC7E1E8
D2C2AF9576583C2C2A3A56708FA9C0D0B29A8A878074644C4A62727E818898B0
435B6B7B8593A3BBB9A19183796959412333536D8CADCBDBD9C9AB9677513121
0B1B355D9CC4E5F3F1E3CEA6673F1909030D2545B4D4ECFDFBF6DEBE4F2F1701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
pop pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_screens_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI5_End_NonPrinting--
22 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 1 2 Bd
[
0
<
8584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E
5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39383736
3534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E
0D0C0B0A09080706050403020100
>
<
2221212121202020201F1F1F1F1E1E1E1E1D1D1D1C1C1C1C1B1B1B1B1A1A1A1A1919191918181818
17171717161616161515151514141414131313131212121211111111101010100F0F0F0F0E0E0E0E
0D0D0D0D0C0C0C0C0B0B0B0B0A0A0A0A090909090808080807070707060606060505050504040404
0303030302020202010101010000
>
0
1 %_Br
[
0 0.523171 0.131516 0 1 50 0 %_BS
%_0 0.523171 0.131516 0 1 50 0 Bs
0 0 0 0 1 50 99.4382 %_BS
%_0 0 0 0 1 50 99.4382 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 103)
(Unnamed gradient 103) 0 3 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000
>
<
3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B191817161514
131211100F0E0D0C0B0A09080706050403020100
>
<
04040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404
>
0
1 %_Br
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
>
<
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060605050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
050505050505050505050505050505050505050505050505050505050505050504040404
>
0
1 %_Br
[
0 0 0.015686 0 1 50 100 %_BS
%_0 0 0.015686 0 1 50 100 Bs
0.000925 0.235955 0.017537 0 1 50 84.8315 %_BS
%_0.000925 0.235955 0.017537 0 1 50 84.8315 Bs
0.003922 1 0.023529 0 1 50 0 %_BS
%_0.003922 1 0.023529 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 107)
(Unnamed gradient 107) 0 2 Bd
[
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101020202020202020202020202020202020202020202020202020202020202
0202020202020202020202020202020202020202
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C
>
<
06060606060606060606060606060606060606060606060606070707070707070707070707070707
07070707070707070707070707070707070707070707070707070707070707070707070808080808
0808080808080808080808080808080808080808
>
0
1 %_Br
[
0.007843 0.61 0.031373 0 1 50 100 %_BS
%_0.007843 0.61 0.031373 0 1 50 100 Bs
0.003922 1 0.023529 0 1 50 0 %_BS
%_0.003922 1 0.023529 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 121)
(Unnamed gradient 121) 0 2 Bd
[
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000
>
<
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837
363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A
>
<
06060606060606060606060606060606060606060606060606060606060606060606060606050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050505040404040404040404
0404040404040404040404040404040404040404040404040404040404
>
0
1 %_Br
[
0 0.1 0.015686 0 1 50 100 %_BS
%_0 0.1 0.015686 0 1 50 100 Bs
0.003922 0.682353 0.023529 0 1 50 0 %_BS
%_0.003922 0.682353 0.023529 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 124)
(Unnamed gradient 124) 0 8 Bd
[
0
<
636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514
1312
>
0.098039
0
1 %_Br
<
09090808080808080808070707070707070606060606060605050505050505040404040404040303
030303030303020202020202020101010101010100000000
>
<
A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C
7B7A797877767574737271706F6E6D6C6B6A696866656463
>
<
393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A292928282727262625
25242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19
>
0
1 %_Br
<
13131312121212111111101010100F0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A090909
>
<
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACAAA9A8A7A6A5A4A3
>
<
5E5D5C5B5A59585756565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
>
0
1 %_Br
<
1515151515151515151514141414141414141414131313
>
<
E2E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CECDCCCBCA
>
<
69696868676766666565646463636262616160605F5F5E
>
0
1 %_Br
<
1111111112121212121213131313131414141414151515151515
>
<
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEE0E1E2
>
<
575858595A5A5B5C5D5D5E5F6060616263636465666667686969
>
0
1 %_Br
<
0505050506060606070707070808080808090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D0E0E
0E0E0E0F0F0F0F101010101111
>
<
939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B9BABB
BCBDBEBFC0C1C2C3C4C5C6C7C8
>
<
2A2B2C2D2E2F2F30313233343535363738393A3B3B3C3D3E3F4041414243444546474748494A4B4C
4D4D4E4F505152525354555657
>
0
1 %_Br
<
00000000000101010101010101010102020202020202020202030303030303030303030404040404
04040404050505
>
<
6364666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B
8C8E8F90919293
>
<
19191A1A1B1B1B1C1C1C1D1D1E1E1E1F1F1F20202121212222222323242424252525262627272728
282829292A2A2A
>
0
1 %_Br
[
0 0.07 0.098039 0 1 50 100 %_BS
%_0 0.07 0.098039 0 1 50 100 Bs
0 0.39 0.098039 0 1 50 90.4494 %_BS
%_0 0.39 0.098039 0 1 50 90.4494 Bs
0.034314 0.640441 0.223284 0 1 50 64.0449 %_BS
%_0.034314 0.640441 0.223284 0 1 50 64.0449 Bs
0.075526 0.793028 0.37008 0 1 50 47.7528 %_BS
%_0.075526 0.793028 0.37008 0 1 50 47.7528 Bs
0.084241 0.884531 0.412782 0 1 50 29.7753 %_BS
%_0.084241 0.884531 0.412782 0 1 50 29.7753 Bs
0.065657 0.783797 0.340302 0 1 50 16.2921 %_BS
%_0.065657 0.783797 0.340302 0 1 50 16.2921 Bs
0.018567 0.575091 0.165807 0 1 50 6.74157 %_BS
%_0.018567 0.575091 0.165807 0 1 50 6.74157 Bs
0 0.39 0.098039 0 1 50 0.561798 %_BS
%_0 0.39 0.098039 0 1 50 0.561798 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 125)
(Unnamed gradient 125) 0 4 Bd
[
<
0B0B0B0B0B0B0B0A0A0A0A0A0A0A0909090909090908080808080808070707070707060606060606
06050505050505050404040404040403030303030303020202020202020101010101010100000000
>
<
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAE
ADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695939291908F8E8D8C8B8A8988878685
>
<
4A4A494948484747464645454444434342414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736
3635353434333332323130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222
>
0
1 %_Br
<
1717161616151515141414131313131212121111111010100F0F0F0F0E0E0E0D0D0D0C0C0C0B
>
<
F1F0EFEEEEEDECEBEBEAE9E8E8E7E6E5E5E4E3E2E2E1E0DFDFDEDDDCDCDBDAD9D9D8D7D6D6D5
>
<
706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655535251504F4E4D4C4B4A
>
0
1 %_Br
<
181818181818181817171717171717
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1
>
<
777776767575747473737272717170
>
0
1 %_Br
[
0 0.523171 0.131516 0 1 50 100 %_BS
%_0 0.523171 0.131516 0 1 50 100 Bs
0.044735 0.834945 0.291096 0 1 50 50 %_BS
%_0.044735 0.834945 0.291096 0 1 50 50 Bs
0.089824 0.943161 0.440143 0 1 50 30.3371 %_BS
%_0.089824 0.943161 0.440143 0 1 50 30.3371 Bs
0.095238 1 0.466667 0 1 50 0 %_BS
%_0.095238 1 0.466667 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 126)
(Unnamed gradient 126) 0 6 Bd
[
<
09090808080808080808070707070707070606060606060605050505050505040404040404040303
030303030303020202020202020101010101010100000000
>
<
A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C
7B7A797877767574737271706F6E6D6C6B6A696866656463
>
<
393838373736363535343433333232313130302F2F2E2E2D2D2C2C2B2B2A2A292928282727262625
25242423232222212120201F1F1E1E1D1D1C1C1B1B1A1A19
>
0
1 %_Br
<
13131312121212111111101010100F0F0F0F0E0E0E0D0D0D0D0C0C0C0C0B0B0B0A0A0A0A090909
>
<
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACAAA9A8A7A6A5A4A3
>
<
5E5D5C5B5A59585756565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A39
>
0
1 %_Br
<
18181818181717171717171717171717161616161616161616161615151515151515151515151514
14141414141414141414131313
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDCDBDAD9D8D7
D6D5D4D3D2D1D0CFCECDCCCBCA
>
<
757574747373727271717170706F6F6E6E6E6D6D6C6C6B6B6B6A6A69696868676767666665656464
646363626261616160605F5F5E
>
0
1 %_Br
<
11111111111112121212121212121313131313131314141414141414141515151515151515161616
161616161717171717171717181818
>
<
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E8E9EAEBECEDEEEFF0
F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
57575858595A5A5B5B5C5C5D5D5E5F5F6060616162636364646565666667686869696A6A6B6B6C6D
6D6E6E6F6F70707172727373747475
>
0
1 %_Br
<
0505050506060606070707070808080808090909090A0A0A0A0B0B0B0B0B0C0C0C0C0D0D0D0D0E0E
0E0E0E0F0F0F0F101010101111
>
<
939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B9BABB
BCBDBEBFC0C1C2C3C4C5C6C7C8
>
<
2A2B2C2D2E2F2F30313233343535363738393A3B3B3C3D3E3F4041414243444546474748494A4B4C
4D4D4E4F505152525354555657
>
0
1 %_Br
[
0 0.39 0.098039 0 1 50 100 %_BS
%_0 0.39 0.098039 0 1 50 100 Bs
0.034314 0.640441 0.223284 0 1 50 64.0449 %_BS
%_0.034314 0.640441 0.223284 0 1 50 64.0449 Bs
0.075526 0.793028 0.37008 0 1 50 47.7528 %_BS
%_0.075526 0.793028 0.37008 0 1 50 47.7528 Bs
0.093601 1 0.458646 0 1 50 25.8427 %_BS
%_0.093601 1 0.458646 0 1 50 25.8427 Bs
0.065657 0.783797 0.340302 0 1 50 8.98876 %_BS
%_0.065657 0.783797 0.340302 0 1 50 8.98876 Bs
0.018567 0.575091 0.165807 0 1 50 0 %_BS
%_0.018567 0.575091 0.165807 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 128)
(Unnamed gradient 128) 1 2 Bd
[
<
8E8E8D8D8D8C8C8C8B8B8B8A8A8A8989898888878787868686858585848484838383828282818181
8080807F7F7F7E7E7E7D7D7D7C7C7B7B7B7A7A7A7979797878787777777676767575757474747373
737272727171717070706F6F6E6E6E6D6D6D6C6C6C6B6B6B6A6A6A69696968686867676766666665
656564646463636262626161616060605F5F5F5E5E5E5D5D5D5C5C5C5B5B5B5A5A5A595959585858
57575656565555555454545353535252525151
>
<
BFBFBEBEBEBEBDBDBDBCBCBCBCBBBBBBBABABABAB9B9B9B8B8B8B8B7B7B7B6B6B6B6B5B5B5B4B4B4
B4B3B3B3B2B2B2B2B1B1B1B0B0B0B0AFAFAFAEAEAEAEADADADACACACACABABABAAAAAAAAA9A9A9A8
A8A8A8A7A7A7A6A6A6A6A5A5A5A4A4A4A3A3A3A3A2A2A2A1A1A1A1A0A0A09F9F9F9F9E9E9E9D9D9D
9D9C9C9C9B9B9B9B9A9A9A9999999998989897979797969696959595959494949393939392929291
9191919090908F8F8F8F8E8E8E8D8D8D8D8C8C
>
<
B4B4B4B4B3B3B3B3B3B3B2B2B2B2B2B2B2B1B1B1B1B1B1B1B0B0B0B0B0B0AFAFAFAFAFAFAFAEAEAE
AEAEAEADADADADADADADACACACACACACACABABABABABABAAAAAAAAAAAAAAA9A9A9A9A9A9A8A8A8A8
A8A8A8A7A7A7A7A7A7A6A6A6A6A6A6A6A5A5A5A5A5A5A5A4A4A4A4A4A4A3A3A3A3A3A3A3A2A2A2A2
A2A2A1A1A1A1A1A1A1A0A0A0A0A0A0A09F9F9F9F9F9F9E9E9E9E9E9E9E9D9D9D9D9D9D9C9C9C9C9C
9C9C9B9B9B9B9B9B9B9A9A9A9A9A9A99999999
>
<
CAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3
A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453
5251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B
2A292827262524232221201F1E1D1C1B1A1918
>
1 %_Br
[
0.556863 0.74902 0.705882 0.792157 1 50 82.5843 %_BS
%_0.556863 0.74902 0.705882 0.792157 1 50 82.5843 Bs
0.317647 0.54902 0.6 0.094118 1 50 94.9438 %_BS
%_0.317647 0.54902 0.6 0.094118 1 50 94.9438 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 129)
(Unnamed gradient 129) 0 2 Bd
[
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010202020202020202020202020202020202020202020202020202020202020202020202020202
02020202
>
<
FCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5
D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEAD
ACABAAA9
>
<
06060606060606060606060606060606060606060607070707070707070707070707070707070707
07070707070707070707070707070707070707070707070808080808080808080808080808080808
08080808
>
<
0F0F0F0F0F0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A0909090909080808
08080807070707070606060606060505050505040404040404030303030302020202020101010101
01000000
>
1 %_Br
[
0.007843 0.662745 0.031373 0 1 50 100 %_BS
%_0.007843 0.662745 0.031373 0 1 50 100 Bs
0.003922 0.99 0.023529 0.06 1 50 2.24719 %_BS
%_0.003922 0.99 0.023529 0.06 1 50 2.24719 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 130)
(Unnamed gradient 130) 0 3 Bd
[
<
01010102020202020202020202020202020202020202020202020202020202020202020202020202
02020202
>
<
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEAD
ACABAAA9
>
<
07070707070707070707070707070707070707070707070808080808080808080808080808080808
08080808
>
0
1 %_Br
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
>
<
FCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5
>
<
06060606060606060606060606060606060606060607070707070707070707070707070707070707
>
0
1 %_Br
[
0.007843 0.662745 0.031373 0 1 50 100 %_BS
%_0.007843 0.662745 0.031373 0 1 50 100 Bs
0.005778 0.835086 0.027242 0 1 50 79.2135 %_BS
%_0.005778 0.835086 0.027242 0 1 50 79.2135 Bs
0.003922 0.99 0.023529 0 1 50 12.3596 %_BS
%_0.003922 0.99 0.023529 0 1 50 12.3596 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 154)
(Unnamed gradient 154) 1 3 Bd
[
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191B1C1D1E1F202122232425262728
292A2B2C2D2E2F30313233
>
0.015686
0
1 %_Br
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000001010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
0101010101010101010101010101010101010101010101010101
>
<
333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A
5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182
838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AA
ABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4
>
<
04040404040404040404040404040404040404040404040404040404040404040404040404050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050606060606060606060606
0606060606060606060606060606060606060606060606060606
>
0
1 %_Br
[
0 0 0.015686 0 1 50 56.1798 %_BS
%_0 0 0.015686 0 1 50 56.1798 Bs
0 0.2 0.015686 0 1 50 82.0225 %_BS
%_0 0.2 0.015686 0 1 50 82.0225 Bs
0.003922 0.77 0.023529 0 1 50 100 %_BS
%_0.003922 0.77 0.023529 0 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 155)
(Unnamed gradient 155) 0 2 Bd
[
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000
>
<
FAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3
D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACAB
AAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A89888786858483
8281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B
5A595857565554535251504F4E4D4C4B4A49484746454443424140
>
<
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050404040404040404040404040404040404040404
040404040404040404040404040404040404040404040404040404
>
0
1 %_Br
[
0 0.25098 0.015686 0 1 50 100 %_BS
%_0 0.25098 0.015686 0 1 50 100 Bs
0.003922 0.98 0.023529 0 1 50 18.5393 %_BS
%_0.003922 0.98 0.023529 0 1 50 18.5393 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 156)
(Unnamed gradient 156) 0 2 Bd
[
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010202020202020202020202020202020202020202020202020202020202020202020202020202
02020202
>
<
FCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5
D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEAD
ACABAAA9
>
<
06060606060606060606060606060606060606060607070707070707070707070707070707070707
07070707070707070707070707070707070707070707070808080808080808080808080808080808
08080808
>
0
1 %_Br
[
0.007843 0.662745 0.031373 0 1 50 90.4494 %_BS
%_0.007843 0.662745 0.031373 0 1 50 90.4494 Bs
0.003922 0.99 0.023529 0 1 50 16.8539 %_BS
%_0.003922 0.99 0.023529 0 1 50 16.8539 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 157)
(Unnamed gradient 157) 0 2 Bd
[
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010202020202020202020202020202020202020202020202020202020202020202020202020202
02020202
>
<
FCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5
D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEAD
ACABAAA9
>
<
06060606060606060606060606060606060606060607070707070707070707070707070707070707
07070707070707070707070707070707070707070707070808080808080808080808080808080808
08080808
>
0
1 %_Br
[
0.007843 0.662745 0.031373 0 1 50 100 %_BS
%_0.007843 0.662745 0.031373 0 1 50 100 Bs
0.003922 0.99 0.023529 0 1 50 26.4045 %_BS
%_0.003922 0.99 0.023529 0 1 50 26.4045 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 0 4 Bd
[
<
0B0B0B0B0B0B0B0A0A0A0A0A0A0A0909090909090908080808080808070707070707060606060606
06050505050505050404040404040403030303030303020202020202020101010101010100000000
>
<
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAE
ADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695939291908F8E8D8C8B8A8988878685
>
<
4A4A494948484747464645454444434342414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736
3635353434333332323130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222
>
0
1 %_Br
<
1717161616151515141414131313131212121111111010100F0F0F0F0E0E0E0D0D0D0C0C0C0B
>
<
F1F0EFEEEEEDECEBEBEAE9E8E8E7E6E5E5E4E3E2E2E1E0DFDFDEDDDCDCDBDAD9D9D8D7D6D6D5
>
<
706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655535251504F4E4D4C4B4A
>
0
1 %_Br
<
181818181818181817171717171717
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1
>
<
777776767575747473737272717170
>
0
1 %_Br
[
0 0.523171 0.131516 0 1 50 100 %_BS
%_0 0.523171 0.131516 0 1 50 100 Bs
0.044735 0.834945 0.291096 0 1 50 50 %_BS
%_0.044735 0.834945 0.291096 0 1 50 50 Bs
0.089824 0.943161 0.440143 0 1 50 30.3371 %_BS
%_0.089824 0.943161 0.440143 0 1 50 30.3371 Bs
0.095238 1 0.466667 0 1 50 0 %_BS
%_0.095238 1 0.466667 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3)
(Unnamed gradient 3) 0 4 Bd
[
<
0B0B0B0B0B0B0B0A0A0A0A0A0A0A0909090909090908080808080808070707070707060606060606
06050505050505050404040404040403030303030303020202020202020101010101010100000000
>
<
D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAE
ADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979695939291908F8E8D8C8B8A8988878685
>
<
4A4A494948484747464645454444434342414140403F3F3E3E3D3D3C3C3B3B3A3A39393838373736
3635353434333332323130302F2F2E2E2D2D2C2C2B2B2A2A29292828272726262525242423232222
>
0
1 %_Br
<
1717161616151515141414131313131212121111111010100F0F0F0F0E0E0E0D0D0D0C0C0C0B
>
<
F1F0EFEEEEEDECEBEBEAE9E8E8E7E6E5E5E4E3E2E2E1E0DFDFDEDDDCDCDBDAD9D9D8D7D6D6D5
>
<
706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A5958575655535251504F4E4D4C4B4A
>
0
1 %_Br
<
181818181818181817171717171717
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1
>
<
777776767575747473737272717170
>
0
1 %_Br
[
0 0.523171 0.131516 0 1 50 100 %_BS
%_0 0.523171 0.131516 0 1 50 100 Bs
0.044735 0.834945 0.291096 0 1 50 50 %_BS
%_0.044735 0.834945 0.291096 0 1 50 50 Bs
0.089824 0.943161 0.440143 0 1 50 30.3371 %_BS
%_0.089824 0.943161 0.440143 0 1 50 30.3371 Bs
0.095238 1 0.466667 0 1 50 0 %_BS
%_0.095238 1 0.466667 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 52)
(Unnamed gradient 52) 0 2 Bd
[
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010202020202020202020202020202020202020202020202020202020202020202020202020202
02020202
>
<
FCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5
D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEAD
ACABAAA9
>
<
06060606060606060606060606060606060606060607070707070707070707070707070707070707
07070707070707070707070707070707070707070707070808080808080808080808080808080808
08080808
>
0
1 %_Br
[
0.007843 0.662745 0.031373 0 1 50 100 %_BS
%_0.007843 0.662745 0.031373 0 1 50 100 Bs
0.003922 0.99 0.023529 0 1 50 5.05618 %_BS
%_0.003922 0.99 0.023529 0 1 50 5.05618 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 64)
(Unnamed gradient 64) 0 2 Bd
[
0.002681
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877
>
0.021048
0
1 %_Br
[
0.002681 0.466467 0.021048 0 1 50 100 %_BS
%_0.002681 0.466467 0.021048 0 1 50 100 Bs
0.002681 1 0.021048 0 1 50 11.7978 %_BS
%_0.002681 1 0.021048 0 1 50 11.7978 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 66)
(Unnamed gradient 66) 0 3 Bd
[
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000
>
<
3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B191817161514
131211100F0E0D0C0B0A09080706050403020100
>
<
04040404040404040404040404040404040404040404040404040404040404040404040404040404
0404040404040404040404040404040404040404
>
0
1 %_Br
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C
>
<
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606060606060606060606060605050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
050505050505050505050505050505050505050505050505050505050505050504040404
>
0
1 %_Br
[
0 0 0.015686 0 1 50 100 %_BS
%_0 0 0.015686 0 1 50 100 Bs
0.000925 0.235955 0.017537 0 1 50 72.4719 %_BS
%_0.000925 0.235955 0.017537 0 1 50 72.4719 Bs
0.003922 1 0.023529 0 1 50 0 %_BS
%_0.003922 1 0.023529 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 67)
(Unnamed gradient 67) 0 2 Bd
[
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000
>
<
C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A0
9F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A7978
77767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A59585756555453525150
4F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A2928
27262524232221201F
>
<
06060606060606060606060606060606060606060606060606060606060606060606060606060606
06060505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050504040404040404040404040404040404040404040404040404040404040404040404
040404040404040404
>
0
1 %_Br
[
0 0.12 0.015686 0 1 50 100 %_BS
%_0 0.12 0.015686 0 1 50 100 Bs
0.003922 0.78 0.023529 0 1 50 0 %_BS
%_0.003922 0.78 0.023529 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 94)
(Unnamed gradient 94) 0 2 Bd
[
<
01010101010101000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000
>
<
51504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A
292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A0908070605040302
0100
>
<
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505040404040404040404040404040404040404040404040404040404040404040404040404
0404
>
0
1 %_Br
[
0 0 0.015686 0 1 50 65.7303 %_BS
%_0 0 0.015686 0 1 50 65.7303 Bs
0.002145 0.318578 0.019976 0 1 50 0.561798 %_BS
%_0.002145 0.318578 0.019976 0 1 50 0.561798 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 98)
(Unnamed gradient 98) 0 2 Bd
[
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010100000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000
>
<
D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AF
AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F
5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746454443424140
>
<
06060606060606060606060606060606060606060606060606060606060606060606060606060505
05050505050505050505050505050505050505050505050505050505050505050505050505050505
05050505050505050505050505050505050505050505050505050505050505050504040404040404
04040404040404040404040404040404040404040404040404040404040404
>
0
1 %_Br
[
0 0.25098 0.015686 0 1 50 100 %_BS
%_0 0.25098 0.015686 0 1 50 100 Bs
0.003922 0.84 0.023529 0 1 50 0 %_BS
%_0.003922 0.84 0.023529 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([Registration]) 0 Xs
([Registration])
Pc
0 0 0 0 k
(White)
Pc
0 0 0 1 k
(Black)
Pc
0 0 0 0.3 k
(Smoke)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(basket) Ln
0 A
1 Ap
0 O
0 J 0 j 1 w 4 M []0 d0 XR
527 132.5635 m
527 164.9678 425.502 191.2373 300.3008 191.2373 c
175.0986 191.2373 73.6011 164.9678 73.6011 132.5635 c
73.6011 100.1592 175.0986 73.8896 300.3008 73.8896 c
425.502 73.8896 527 100.1592 527 132.5635 c
Bb
0 0 0 0 Bh
1 (Unnamed gradient 1) 300.3008 100.8701 0 226.6997 1 0 0 0.258817 0 6276.5303 Bg
226.6997 0 0 -58.6737 300.3008 132.5635 Bm
f
0 BB
0 Ap
0 0.1 0 0 k
564.9453 335.998 m
565.9746 342.7422 561.1416 346.5859 555.1191 344.0918 C
554.2217 352.5176 548.29 356.3623 540.3604 352.3652 C
537.6357 359.3643 531.6299 361.8545 524.7744 358.9512 C
522.5488 367.7129 514.6406 367.8604 509.8018 364.1035 C
505.1211 372.6934 498.3838 373.8643 491.2646 369.4434 C
485.3486 379.8682 475.8281 382.0664 468.6201 374.8545 C
464.5518 381.1875 457.375 383.6777 451.2197 378.3828 C
451.2129 378.3945 451.2051 378.4072 451.1973 378.4189 c
446.2168 387.4844 436.5713 387.4775 431.3213 381.877 C
431.3174 381.877 431.3164 381.8779 431.3135 381.8779 C
334.7686 397.5791 209.3843 400.6396 123.9243 385.2344 C
114.5107 390.5596 106.0156 390.2686 100.772 380.3545 C
90.4912 387.0459 80.2388 383.2383 78.9707 374.0713 C
69.7676 378.624 62.2246 374.377 60.2217 366.5205 C
50.8008 371.3008 45.3081 366.6885 44.9971 357.5586 C
37.6929 359.2188 32.2734 352.4082 33.2271 346.1885 C
24.9507 345.085 21.9111 331.583 25.4263 324.2598 C
33.1396 310.9629 568.002 313.5303 573.8008 323.1611 c
576.877 328.4336 573.0059 338.0186 564.9453 335.998 C
f
u
60.2217 364.7627 m
118.4956 279.1602 L
125.5581 277.4648 132.8936 275.8877 140.4727 274.4248 C
78.9707 372.3145 L
69.7676 376.8672 62.2246 372.6191 60.2217 364.7627 C
Bb
1 (Unnamed gradient 126) 90.8047 315.8193 32 20.1848 1 0 0 1 0 0 Bg
17.1177 10.6963 68.2211 -109.1766 56.1938 371.209 Xm
6773.1938 4232.3618 68.2211 -109.1766 -6717 -3861.1523 Bc
1.53867 0.961467 68.2211 -109.1766 56.1938 371.209 Bm
2.88501 1.80275 68.2211 -109.1766 57.7324 372.1709 Bm
3.7505 2.34358 68.2211 -109.1766 60.6177 373.9736 Bm
2.78883 1.74266 68.2211 -109.1766 64.3682 376.3164 Bm
6.15468 3.84587 68.2211 -109.1766 67.1567 378.0596 Bm
6773.1938 4232.3618 68.2211 -109.1766 73.3115 381.9053 Bc
f
0 BB
468.6201 373.0977 m
423.625 267.3516 L
430.8242 268.2422 437.8818 269.2207 444.7725 270.2832 C
491.2646 367.6865 L
485.3486 378.1113 475.8281 380.3086 468.6201 373.0977 C
Bb
1 (Unnamed gradient 125) 444.6826 326.1162 -27 25.4277 1 0 0 1 0 0 Bg
22.6563 -11.544 -59.3409 -116.4631 475.0049 385.627 Xm
7431.6025 -3786.5908 -59.3409 -116.4631 -6956.5977 4172.2178 Bc
6.87326 -3.5021 -59.3409 -116.4631 475.0049 385.627 Bm
4.45488 -2.26988 -59.3409 -116.4631 481.8779 382.125 Bm
11.3281 -5.77198 -59.3409 -116.4631 486.333 379.8545 Bm
7431.6025 -3786.5908 -59.3409 -116.4631 497.6611 374.083 Bc
f
0 BB
33.2271 344.4316 m
74.1538 292.8818 L
80.8364 290.1973 88.0376 287.6768 95.7124 285.3271 C
44.9971 355.8018 L
37.6929 357.4609 32.2734 350.6504 33.2271 344.4316 C
Bb
1 (Unnamed gradient 126) 56.4512 312.4668 36 16.2053 1 0 0 1 0 0 Bg
13.1104 9.52525 56.6981 -78.0382 27.3989 352.4541 Xm
6433.6685 4674.3335 56.6981 -78.0382 -6406.2695 -4321.8799 Bc
1.17846 0.856202 56.6981 -78.0382 27.3989 352.4541 Bm
2.20962 1.60538 56.6981 -78.0382 28.5771 353.3105 Bm
2.8725 2.08699 56.6981 -78.0382 30.7871 354.916 Bm
2.13596 1.55186 56.6981 -78.0382 33.6597 357.0029 Bm
4.71385 3.42481 56.6981 -78.0382 35.7954 358.5547 Bm
6433.6685 4674.3335 56.6981 -78.0382 40.5093 361.9795 Bc
f
0 BB
26.6348 323.1895 m
34.3477 309.8916 51.1089 302.1426 74.1538 292.8818 C
33.2271 344.4316 L
24.9507 343.3262 23.1191 330.5117 26.6348 323.1895 C
Bb
1 (Unnamed gradient 126) 38.5005 307.4766 38 19.1095 1 0 0 1 0 0 Bg
15.0585 11.765 45.5855 -58.3468 14.7407 337.8877 Xm
6253.8794 4886.0659 45.5855 -58.3468 -6239.1387 -4548.1777 Bc
1.35357 1.05753 45.5855 -58.3468 14.7407 337.8877 Bm
2.53795 1.98286 45.5855 -58.3468 16.0942 338.9453 Bm
3.29933 2.57772 45.5855 -58.3468 18.6323 340.9277 Bm
2.45334 1.91676 45.5855 -58.3468 21.9316 343.5059 Bm
5.4143 4.23011 45.5855 -58.3468 24.3848 345.4229 Bm
6253.8794 4886.0659 45.5855 -58.3468 29.7993 349.6523 Bc
f
0 BB
44.9971 355.8018 m
95.7124 285.3271 L
102.9155 283.123 110.5327 281.0693 118.4956 279.1602 C
60.2217 364.7627 L
50.8008 369.5439 45.3081 364.9297 44.9971 355.8018 C
Bb
1 (Unnamed gradient 126) 72.6616 314.7871 34 18.0756 1 0 0 1 0 0 Bg
14.9853 10.1077 65.3059 -96.82 39.3228 364.2139 Xm
6606.3198 4456.0195 65.3059 -96.82 -6566.9971 -4091.8057 Bc
1.34699 0.908559 65.3059 -96.82 39.3228 364.2139 Bm
2.52562 1.70355 65.3059 -96.82 40.6699 365.1221 Bm
3.2833 2.21461 65.3059 -96.82 43.1953 366.8262 Bm
2.44142 1.64676 65.3059 -96.82 46.4785 369.041 Bm
5.38799 3.63424 65.3059 -96.82 48.9199 370.6875 Bm
6606.3198 4456.0195 65.3059 -96.82 54.3081 374.3213 Bc
f
0 BB
555.1191 342.334 m
523.5957 289.1973 L
529.373 291.3223 534.7617 293.5625 539.7207 295.918 C
564.9453 334.2412 L
565.9746 340.9834 561.1416 344.8281 555.1191 342.334 C
Bb
1 (Unnamed gradient 2) 550.8906 310.8496 149 12.5908 1 0 0 1 0 0 Bg
-10.7924 6.48475 36.5793 60.8782 533.0615 281.1768 Xm
-7240.3984 4350.4697 36.5793 60.8782 7773.46 -4069.293 Bc
-3.27411 1.96729 36.5793 60.8782 533.0615 281.1768 Bm
-2.12211 1.27509 36.5793 60.8782 529.7871 283.1445 Bm
-5.39622 3.24238 36.5793 60.8782 527.665 284.4189 Bm
-7240.3984 4350.4697 36.5793 60.8782 522.2695 287.6611 Bc
f
0 BB
572.3457 321.4307 m
575.4209 326.7041 573.0059 336.2607 564.9453 334.2412 C
539.7207 295.918 L
555.2373 303.291 566.5459 311.7998 572.3457 321.4307 C
Bb
1 (Unnamed gradient 2) 563.8779 308.791 146 13.3467 1 0 0 1 0 0 Bg
-11.0649 7.46337 31.3475 46.4746 549.2383 287.0859 Xm
-7013.9956 4730.9985 31.3475 46.4746 7563.2334 -4443.9131 Bc
-3.35677 2.26417 31.3475 46.4746 549.2383 287.0859 Bm
-2.17568 1.46751 31.3475 46.4746 545.8818 289.3506 Bm
-5.53245 3.73168 31.3475 46.4746 543.7061 290.8174 Bm
-7013.9956 4730.9985 31.3475 46.4746 538.1738 294.5488 Bc
f
0 BB
540.3604 350.6084 m
504.1904 282.8975 L
511.0537 284.8701 517.5371 286.9697 523.5957 289.1973 C
555.1191 342.334 L
554.2217 350.7598 548.29 354.6055 540.3604 350.6084 C
Bb
1 (Unnamed gradient 2) 538.4902 311.0586 152 17.0635 1 0 0 1 0 0 Bg
-15.0662 8.01082 41.3219 77.7152 518.3184 273.1201 Xm
-7447.2129 3959.7537 41.3219 77.7152 7965.5313 -3686.6338 Bc
-4.57063 2.43025 41.3219 77.7152 518.3184 273.1201 Bm
-2.96244 1.57516 41.3219 77.7152 513.748 275.5508 Bm
-7.53308 4.00541 41.3219 77.7152 510.7852 277.126 Bm
-7447.2129 3959.7537 41.3219 77.7152 503.252 281.1309 Bc
f
0 BB
524.7744 357.1943 m
482.083 277.2754 L
489.8086 279.0176 497.1973 280.8896 504.1904 282.8975 C
540.3604 350.6084 L
537.6357 357.6064 531.6299 360.0967 524.7744 357.1943 C
Bb
1 (Unnamed gradient 2) 519.5127 311.3984 152 17.0283 1 0 0 1 0 0 Bg
-15.0351 7.99431 47.4206 89.1852 496.1797 267.5146 Xm
-7430.4561 3950.8438 47.4206 89.1852 7926.6357 -3683.3291 Bc
-4.56122 2.42524 47.4206 89.1852 496.1797 267.5146 Bm
-2.95634 1.57191 47.4206 89.1852 491.6182 269.9395 Bm
-7.51756 3.99716 47.4206 89.1852 488.6621 271.5117 Bm
-7430.4561 3950.8438 47.4206 89.1852 481.1445 275.5088 Bc
f
0 BB
509.8018 362.3467 m
466.4053 274.0176 L
471.7676 275.0449 477.0029 276.1309 482.083 277.2754 C
524.7744 357.1943 L
522.5488 365.9551 514.6406 366.1035 509.8018 362.3467 C
Bb
1 (Unnamed gradient 3) 502.7891 314.0459 153 15.6797 1 0 0 1 0 0 Bg
-13.9707 7.11843 50.577 99.2631 478.1904 265.7686 Xm
-7483.376 3812.9692 50.577 99.2631 7961.5664 -3547.2002 Bc
-4.23831 2.15952 50.577 99.2631 478.1904 265.7686 Bm
-2.74705 1.39969 50.577 99.2631 473.9521 267.9277 Bm
-6.98535 3.55921 50.577 99.2631 471.2051 269.3281 Bm
-7483.376 3812.9692 50.577 99.2631 464.2197 272.8867 Bc
f
0 BB
491.2646 367.6865 m
444.7725 270.2832 L
452.1904 271.4287 459.4072 272.6748 466.4053 274.0176 C
509.8018 362.3467 L
505.1211 370.9355 498.3838 372.1064 491.2646 367.6865 C
Bb
1 (Unnamed gradient 2) 486.4766 313.4102 153 20.375 1 0 0 1 0 0 Bg
-18.1543 9.25005 54.969 107.8827 459.5283 260.5205 Xm
-7468.8418 3805.5637 54.969 107.8827 7928.3701 -3545.043 Bc
-5.50748 2.8062 54.969 107.8827 459.5283 260.5205 Bm
-3.56965 1.81883 54.969 107.8827 454.0205 263.3271 Bm
-9.07713 4.62503 54.969 107.8827 450.4512 265.1455 Bm
-7468.8418 3805.5637 54.969 107.8827 441.374 269.7705 Bc
f
0 BB
468.6201 373.0977 m
464.5518 379.4307 457.375 381.9209 451.2197 376.626 C
451.2129 376.6377 451.2051 376.6484 451.1973 376.6621 C
405.5547 265.3271 L
411.6611 265.9443 417.6943 266.6162 423.625 267.3516 C
468.6201 373.0977 L
Bb
1 (Unnamed gradient 125) 428.9033 324.1416 -23 17.4307 1 0 0 1 0 0 Bg
16.045 -6.8107 -51.6097 -121.5847 455.0127 385.6523 Xm
7663.1138 -3252.7991 -51.6097 -121.5847 -7208.1011 3638.4512 Bc
4.86759 -2.06617 -51.6097 -121.5847 455.0127 385.6523 Bm
3.15491 -1.33918 -51.6097 -121.5847 459.8799 383.5859 Bm
8.02251 -3.40535 -51.6097 -121.5847 463.0352 382.2471 Bm
7663.1138 -3252.7991 -51.6097 -121.5847 471.0576 378.8418 Bc
f
0 BB
431.3213 380.1201 m
431.3174 380.1201 431.3164 380.1211 431.3135 380.1211 C
391.3926 264.0146 L
396.1563 264.4189 400.8809 264.8545 405.5547 265.3271 C
451.1973 376.6621 L
446.2168 385.7256 436.5713 385.7197 431.3213 380.1201 C
Bb
1 (Unnamed gradient 125) 409.7842 326.834 -22 19.7314 1 0 0 1 0 0 Bg
18.2947 -7.39153 -51.4657 -127.382 436.1006 391.9697 Xm
7700.9893 -3111.4014 -51.4657 -127.382 -7264.8887 3503.3711 Bc
5.55007 -2.24238 -51.4657 -127.382 436.1006 391.9697 Bm
3.59726 -1.45339 -51.4657 -127.382 441.6504 389.7275 Bm
9.14734 -3.69576 -51.4657 -127.382 445.248 388.2744 Bm
7700.9893 -3111.4014 -51.4657 -127.382 454.3955 384.5781 Bc
f
0 BB
78.9707 372.3145 m
140.4727 274.4248 L
146.6309 273.2373 152.957 272.1309 159.4087 271.0967 C
100.772 378.5967 L
90.4912 385.2871 80.2388 381.4814 78.9707 372.3145 C
Bb
1 (Unnamed gradient 126) 108.7842 318.5293 29 22.1135 1 0 0 1 0 0 Bg
19.3409 10.7208 67.3532 -121.5083 74.4121 380.5381 Xm
7001.1416 3880.7961 67.3532 -121.5083 -6926.7295 -3500.2578 Bc
1.73851 0.963671 67.3532 -121.5083 74.4121 380.5381 Bm
3.25971 1.80689 67.3532 -121.5083 76.1504 381.502 Bm
4.23762 2.34895 67.3532 -121.5083 79.4102 383.3086 Bm
3.15104 1.74665 67.3532 -121.5083 83.6479 385.6572 Bm
6.95405 3.85469 67.3532 -121.5083 86.7988 387.4043 Bm
7001.1416 3880.7961 67.3532 -121.5083 93.7529 391.2588 Bc
f
0 BB
100.772 378.5967 m
159.4087 271.0967 L
166.7432 269.9189 174.2495 268.8398 181.9063 267.8594 C
123.9243 383.4775 L
114.5107 388.8027 106.0156 388.5117 100.772 378.5967 C
Bb
1 (Unnamed gradient 126) 130.7856 319.6914 27 22.8447 1 0 0 1 0 0 Bg
20.3548 10.3713 66.2625 -130.0474 96.9341 386.1289 Xm
7151.9185 3644.0845 66.2625 -130.0474 -7054.9844 -3257.9561 Bc
1.82964 0.93225 66.2625 -130.0474 96.9341 386.1289 Bm
3.43059 1.74797 66.2625 -130.0474 98.7637 387.0615 Bm
4.45976 2.27236 66.2625 -130.0474 102.1943 388.8096 Bm
3.31622 1.6897 66.2625 -130.0474 106.6543 391.0811 Bm
7.31859 3.72901 66.2625 -130.0474 109.9702 392.7715 Bm
7151.9185 3644.0845 66.2625 -130.0474 117.2891 396.5 Bc
f
0 BB
0.131687 0.79 0.329218 0.003292 k
123.9243 383.4775 m
181.9063 267.8594 L
247.3711 259.4775 323.5215 258.2578 391.3926 264.0146 C
431.3135 380.1211 L
334.7686 395.8203 209.3843 398.8818 123.9243 383.4775 C
f
U
61.7852 333.7344 m
82.875 447.9731 500.2881 424.2466 516.1055 318.7959 C
522.9688 291.1201 516.9834 277.4941 511.7109 270.4639 C
473.9248 215.1006 144.3887 215.1006 83.7544 265.1914 C
70.5728 274.8574 56.5122 297.7051 61.7852 333.7344 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 128) 298.1714 792.4497 -91.4144 569.6125 1 0 0 1 0 0 Bg
-14.06 -569.4389 -569.4389 14.06 298.1714 792.4497 Bm
f
0 BB
u
0.262745 0.960784 0.929412 1 k
285.1465 311.5791 m
299.1934 301.4707 312.3809 291.4639 332.3838 286.3574 c
372.3457 276.1543 405.5107 282.1074 414.0098 292.7334 c
419.8877 300.0811 424.1436 316.165 431.8281 330.0313 C
442.8154 314.4785 484.8643 314.9756 487.1357 319.5176 C
489.667 324.0557 493.333 334.3887 491 344.5557 C
99.25 354.1396 L
127 317.6396 216.3906 292.4961 285.1465 311.5791 C
f
U
0 0.1 0 0 k
573.417 324.2881 m
573.375 323.998 572.8203 323.4902 572.7031 323.4775 C
566.3594 322.8271 559.9824 315.5684 558.8721 310.1543 C
556.6758 314.6953 552.6396 314.0791 550.6299 305.6924 C
546.7158 311.7656 542.7607 313.8154 538.6885 299.9014 C
533.9736 308.3965 528.4082 309.8613 522.9688 293.7568 C
520.0596 302.5381 511.2725 307.3711 504.5195 287.8652 C
498.9697 296.0938 492.3789 297.4111 484.4316 282.543 C
477.293 293.165 469.0908 293.751 462.1719 277.625 C
453.7139 290.6758 443.46 289.3564 433.3174 272.4424 C
423.6885 285.9873 415.1943 283.3516 405.9473 268.5576 C
397.6182 282.6201 387.2197 276.7607 377.3438 265.4355 C
367.0078 276.4688 357.1953 278.2266 344.6953 262.9502 C
333.6162 277.4941 322.4854 276.6152 311.0244 261.5547 C
300.8086 277.9326 286.3086 278.3721 277.3237 261.3613 C
266.9761 280.5703 253.5747 277.7129 245.9346 262.3262 C
234.2417 282.7666 221.9399 278.5918 213.6445 264.5859 C
203.4854 285.4023 189.645 282.1064 183.1255 268.0664 C
169.873 288.4775 162.8428 285.1826 155.3003 272.584 C
142.8506 292.6514 136.9194 289.1377 130.3281 277.9609 C
121.3213 297.2656 110.3369 293.751 103.4443 285.5166 C
97.8145 304.5166 88.3677 299.6826 82.377 293.1045 C
77.1636 311.5459 72.1104 307.8115 63.6626 301.4961 C
63.3232 313.9619 56.2925 315.2803 48.4653 309.9092 C
41.0029 330.4688 34.4468 327.2334 26.8911 324.5811 C
26.6963 324.5127 26.0581 324.8916 25.8623 325.1494 C
25.7441 325.2168 25.603 325.2354 25.4126 325.1123 C
25.7012 324.3281 24.9321 324.2598 26.6348 323.1895 C
35.9751 310.8975 83.4243 249.7578 131.207 136.8916 C
133.6426 134.167 458.0205 130.417 459.8652 132.498 C
518.6689 249.2783 563.7158 307.0264 572.3799 321.374 C
573.3525 322.4209 573.7139 322.9902 573.9668 323.5459 C
573.7363 323.5498 573.6484 324.3037 573.417 324.2881 C
f
u
155.3003 269.9473 m
211.1011 107.9072 L
216.4434 107.1738 221.9395 106.5098 227.5542 105.915 C
183.1255 265.4297 L
169.873 285.8408 162.8428 282.5459 155.3003 269.9473 C
Bb
1 (Unnamed gradient 124) 178.8359 187.8682 16 25.502 1 0 0 1 0 0 Bg
24.5141 7.02929 53.158 -185.384 151.645 282.6943 Xm
7762.0303 2225.7263 53.158 -185.384 -7610.2471 -1942.9932 Bc
1.51491 0.434394 53.158 -185.384 151.7827 282.7334 Bm
2.34122 0.671335 53.158 -185.384 153.2979 283.168 Bm
3.30528 0.947773 53.158 -185.384 155.6387 283.8398 Bm
4.40701 1.26369 53.158 -185.384 158.9443 284.7871 Bm
3.99385 1.14522 53.158 -185.384 163.3511 286.0508 Bm
6.47281 1.85605 53.158 -185.384 167.3452 287.1963 Bm
2.34124 0.67134 53.158 -185.384 173.8179 289.0527 Bm
7762.0303 2225.7263 53.158 -185.384 176.1592 289.7236 Bc
f
0 BB
277.3237 258.7246 m
280.5474 102.3975 L
288.5405 102.1553 296.5776 102.0322 304.5879 102.0273 C
311.0244 258.918 L
300.8086 275.2969 286.3086 275.7354 277.3237 258.7246 C
Bb
1 (Unnamed gradient 124) 274.8301 187.3018 -2 33.6729 1 0 0 1 0 0 Bg
33.6523 -1.17517 -6.1947 -177.3931 278.0005 278.0947 Xm
8165.8535 -285.1579 -6.1947 -177.3931 -7887.6641 563.2456 Bc
2.07964 -0.072623 -6.1947 -177.3931 278.1895 278.0879 Bm
3.21398 -0.112235 -6.1947 -177.3931 280.269 278.0156 Bm
4.53741 -0.15845 -6.1947 -177.3931 283.4834 277.9033 Bm
6.04985 -0.211265 -6.1947 -177.3931 288.0205 277.7451 Bm
5.48267 -0.191459 -6.1947 -177.3931 294.0703 277.5332 Bm
8.88573 -0.310297 -6.1947 -177.3931 299.5527 277.3418 Bm
3.214 -0.112235 -6.1947 -177.3931 308.4385 277.0322 Bm
8165.8535 -285.1579 -6.1947 -177.3931 311.6523 276.9189 Bc
f
0 BB
245.9346 259.6904 m
264.3149 103.0615 L
269.6899 102.7852 275.1079 102.5645 280.5474 102.3975 C
277.3237 258.7246 L
266.9761 277.9326 253.5747 275.0771 245.9346 259.6904 C
Bb
1 (Unnamed gradient 124) 247.2056 186.8818 1 31.8623 1 0 0 1 0 0 Bg
31.8575 0.556074 3.13699 -179.7179 245.5879 279.5596 Xm
8141.9653 142.1185 3.13699 -179.7179 -7896.1982 137.4443 Bc
1.96872 0.034364 3.13699 -179.7179 245.7671 279.5625 Bm
3.04256 0.053108 3.13699 -179.7179 247.7354 279.5967 Bm
4.2954 0.074977 3.13699 -179.7179 250.7783 279.6504 Bm
5.72717 0.099968 3.13699 -179.7179 255.0737 279.7256 Bm
5.19025 0.090596 3.13699 -179.7179 260.8008 279.8252 Bm
8.4118 0.146828 3.13699 -179.7179 265.9907 279.916 Bm
3.04258 0.053108 3.13699 -179.7179 274.4028 280.0625 Bm
8141.9653 142.1185 3.13699 -179.7179 277.4458 280.1152 Bc
f
0 BB
130.3281 275.3242 m
194.4526 110.5059 L
199.8018 109.5615 205.3623 108.6943 211.1011 107.9072 C
155.3003 269.9473 L
142.8506 290.0156 136.9194 286.501 130.3281 275.3242 C
Bb
1 (Unnamed gradient 124) 159.4624 190.7129 19 21.8667 1 0 0 1 0 0 Bg
20.6754 7.1191 64.595 -187.5976 126.4819 286.4951 Xm
7616.5889 2622.6021 64.595 -187.5976 -7489.9907 -2336.0664 Bc
1.27769 0.439944 64.595 -187.5976 126.5981 286.5352 Bm
1.97461 0.679912 64.595 -187.5976 127.876 286.9746 Bm
2.7877 0.959883 64.595 -187.5976 129.8506 287.6553 Bm
3.71692 1.27984 64.595 -187.5976 132.6382 288.6152 Bm
3.36845 1.15985 64.595 -187.5976 136.355 289.8945 Bm
5.45923 1.87976 64.595 -187.5976 139.7236 291.0547 Bm
1.97462 0.679917 64.595 -187.5976 145.1826 292.9346 Bm
7616.5889 2622.6021 64.595 -187.5976 147.1572 293.6143 Bc
f
0 BB
213.6445 261.9492 m
245.2866 104.2881 L
251.541 103.7998 257.897 103.3926 264.3149 103.0615 C
245.9346 259.6904 L
234.2417 280.1299 221.9399 275.9561 213.6445 261.9492 C
Bb
1 (Unnamed gradient 124) 223.0259 185.5449 7 31.7739 1 0 0 1 0 0 Bg
31.5371 3.87227 22.3525 -182.0464 211.5078 279.3535 Xm
8058.5073 989.4604 22.3525 -182.0464 -7846.8223 -710.0859 Bc
1.94892 0.239297 22.3525 -182.0464 211.6851 279.375 Bm
3.01196 0.369822 22.3525 -182.0464 213.6338 279.6143 Bm
4.25221 0.522106 22.3525 -182.0464 216.646 279.9844 Bm
5.66958 0.696137 22.3525 -182.0464 220.8979 280.5068 Bm
5.13805 0.630874 22.3525 -182.0464 226.5679 281.2021 Bm
8.32721 1.02245 22.3525 -182.0464 231.7056 281.834 Bm
3.01198 0.369825 22.3525 -182.0464 240.0327 282.8564 Bm
8058.5073 989.4604 22.3525 -182.0464 243.0449 283.2256 Bc
f
0 BB
183.1255 265.4297 m
227.5542 105.915 L
233.3486 105.2998 239.27 104.7568 245.2866 104.2881 C
213.6445 261.9492 L
203.4854 282.7666 189.645 279.4697 183.1255 265.4297 C
Bb
1 (Unnamed gradient 124) 198.521 186.2285 11 30.2715 1 0 0 1 0 0 Bg
29.7153 5.77607 35.7148 -183.7365 180.2383 280.2861 Xm
7945.8018 1544.5076 35.7148 -183.7365 -7765.3965 -1264.1895 Bc
1.83634 0.356948 35.7148 -183.7365 180.4053 280.3184 Bm
2.83797 0.551645 35.7148 -183.7365 182.2417 280.6758 Bm
4.00657 0.778799 35.7148 -183.7365 185.0796 281.2275 Bm
5.34207 1.03839 35.7148 -183.7365 189.0859 282.0059 Bm
4.84125 0.941043 35.7148 -183.7365 194.4282 283.0439 Bm
7.84618 1.52514 35.7148 -183.7365 199.2695 283.9854 Bm
2.83799 0.55165 35.7148 -183.7365 207.1157 285.5107 Bm
7945.8018 1544.5076 35.7148 -183.7365 209.9536 286.0615 Bc
f
0 BB
26.6348 323.1895 m
31.0278 317.0381 80.2388 254.6455 131.207 134.2549 C
133.6426 131.5303 137.0464 128.9795 141.2734 126.5986 C
48.4653 307.2734 L
40.6948 328.6816 33.2256 326.4844 26.6348 323.1895 C
Bb
1 (Unnamed gradient 124) 78.2104 221.9678 27 12.8933 1 0 0 1 0 0 Bg
11.488 5.85344 104.9665 -206.0084 25.7275 324.9717 Xm
7105.0737 3620.2161 104.9665 -206.0084 -7079.2817 -3295.2109 Bc
0.709934 0.361729 104.9665 -206.0084 25.792 325.0049 Bm
1.09717 0.559035 104.9665 -206.0084 26.502 325.3662 Bm
1.54895 0.789231 104.9665 -206.0084 27.5991 325.9258 Bm
2.06526 1.0523 104.9665 -206.0084 29.1479 326.7148 Bm
1.87164 0.953648 104.9665 -206.0084 31.2134 327.7666 Bm
3.03335 1.54557 104.9665 -206.0084 33.085 328.7207 Bm
1.09718 0.559039 104.9665 -206.0084 36.1182 330.2656 Bm
7105.0737 3620.2161 104.9665 -206.0084 37.2153 330.8252 Bc
f
0 BB
48.4653 307.2734 m
141.2734 126.5986 L
144.1489 124.9805 147.4058 123.4404 151.0112 121.9805 C
63.6626 298.8613 L
63.3232 311.3252 56.2925 312.6445 48.4653 307.2734 C
Bb
1 (Unnamed gradient 124) 94.7661 212.3428 26 11.9126 1 0 0 1 0 0 Bg
10.707 5.22214 95.0782 -194.9392 46.9766 310.3262 Xm
7182.0532 3502.9214 95.0782 -194.9392 -7135.0166 -3192.5664 Bc
0.661666 0.322716 95.0782 -194.9392 47.0366 310.3555 Bm
1.02257 0.498742 95.0782 -194.9392 47.6982 310.6787 Bm
1.44364 0.704111 95.0782 -194.9392 48.7212 311.1768 Bm
1.92485 0.93881 95.0782 -194.9392 50.1646 311.8809 Bm
1.74439 0.850796 95.0782 -194.9392 52.0894 312.8203 Bm
2.82712 1.37888 95.0782 -194.9392 53.834 313.6709 Bm
1.02258 0.498746 95.0782 -194.9392 56.6611 315.0498 Bm
7182.0532 3502.9214 95.0782 -194.9392 57.6836 315.5479 Bc
f
0 BB
82.377 290.4678 m
164.9312 117.2109 L
168.2285 116.2461 171.6982 115.3281 175.3203 114.4561 C
103.4443 282.8809 L
97.8145 301.8799 88.3677 297.0469 82.377 290.4678 C
Bb
1 (Unnamed gradient 124) 120.7178 200.1426 23 16.7817 1 0 0 1 0 0 Bg
15.4477 6.55715 80.8065 -190.3682 79.8477 296.4268 Xm
7379.4282 3132.3816 80.8065 -190.3682 -7299.4937 -2835.918 Bc
0.954631 0.405217 80.8065 -190.3682 79.9346 296.4639 Bm
1.47533 0.626242 80.8065 -190.3682 80.8892 296.8691 Bm
2.08284 0.884113 80.8065 -190.3682 82.3643 297.4951 Bm
2.77711 1.17881 80.8065 -190.3682 84.4473 298.3789 Bm
2.51675 1.0683 80.8065 -190.3682 87.2241 299.5576 Bm
4.07888 1.73138 80.8065 -190.3682 89.7412 300.626 Bm
1.47535 0.626247 80.8065 -190.3682 93.8198 302.3574 Bm
7379.4282 3132.3816 80.8065 -190.3682 95.2954 302.9844 Bc
f
0 BB
103.4443 282.8809 m
175.3203 114.4561 L
181.3047 113.0137 187.708 111.6963 194.4526 110.5059 C
130.3281 275.3242 L
121.3213 294.6299 110.3369 291.1133 103.4443 282.8809 C
Bb
1 (Unnamed gradient 124) 137.6362 193.8086 21 23.1899 1 0 0 1 0 0 Bg
21.6497 8.31053 72.6612 -189.289 100.8589 289.6172 Xm
7500.0459 2878.998 72.6612 -189.289 -7399.0654 -2589.334 Bc
1.3379 0.513572 72.6612 -189.289 100.9805 289.6641 Bm
2.06766 0.7937 72.6612 -189.289 102.3184 290.1777 Bm
2.91907 1.12053 72.6612 -189.289 104.3862 290.9707 Bm
3.89207 1.49403 72.6612 -189.289 107.3052 292.0918 Bm
3.52719 1.35396 72.6612 -189.289 111.1973 293.5859 Bm
5.71649 2.19435 72.6612 -189.289 114.7246 294.9395 Bm
2.06768 0.793706 72.6612 -189.289 120.4409 297.1338 Bm
7500.0459 2878.998 72.6612 -189.289 122.5083 297.9277 Bc
f
0 BB
63.6626 298.8613 m
151.0112 121.9805 L
155.2056 120.2822 159.8657 118.6924 164.9312 117.2109 C
82.377 290.4678 L
77.1636 308.9092 72.1104 305.1748 63.6626 298.8613 C
Bb
1 (Unnamed gradient 124) 107.2461 205.3965 25 15.0117 1 0 0 1 0 0 Bg
13.6052 6.34423 90.791 -194.7019 61.3804 303.7559 Xm
7253.4038 3382.3181 90.791 -194.7019 -7191.9463 -3078.5273 Bc
0.840773 0.392059 90.791 -194.7019 61.457 303.791 Bm
1.29937 0.605907 90.791 -194.7019 62.2974 304.1836 Bm
1.83442 0.855405 90.791 -194.7019 63.5972 304.7891 Bm
2.44588 1.14053 90.791 -194.7019 65.4312 305.6445 Bm
2.21658 1.03361 90.791 -194.7019 67.8774 306.7852 Bm
3.59239 1.67516 90.791 -194.7019 70.0938 307.8193 Bm
1.29938 0.605912 90.791 -194.7019 73.686 309.4941 Bm
7253.4038 3382.3181 90.791 -194.7019 74.9858 310.0996 Bc
f
0 BB
311.0244 258.918 m
304.5879 102.0273 L
311.0127 102.0244 317.4238 102.0986 323.7744 102.249 C
344.6953 260.3135 L
333.6162 274.8574 322.4854 273.9785 311.0244 258.918 C
Bb
1 (Unnamed gradient 124) 302.3389 188.1816 -7 33.25 1 0 0 1 0 0 Bg
33.0022 -4.05216 -21.8243 -177.7447 313.5313 279.3389 Xm
8137.2295 -999.1263 -21.8243 -177.7447 -7823.5127 1278.4429 Bc
2.03946 -0.250414 -21.8243 -177.7447 313.7168 279.3164 Bm
3.15188 -0.387002 -21.8243 -177.7447 315.7559 279.0654 Bm
4.44975 -0.54636 -21.8243 -177.7447 318.9082 278.6787 Bm
5.93296 -0.728476 -21.8243 -177.7447 323.3574 278.1328 Bm
5.37674 -0.660181 -21.8243 -177.7447 329.291 277.4043 Bm
8.71405 -1.06995 -21.8243 -177.7447 334.667 276.7441 Bm
3.15191 -0.387006 -21.8243 -177.7447 343.3818 275.6738 Bm
8137.2295 -999.1263 -21.8243 -177.7447 346.5332 275.2871 Bc
f
0 BB
484.4316 279.9072 m
413.5693 110.9902 L
419.1035 112.1123 424.2988 113.3418 429.084 114.6787 C
504.5195 285.2285 L
498.9697 293.457 492.3789 294.7754 484.4316 279.9072 C
Bb
1 (Unnamed gradient 124) 450.3867 203.4404 -24 16.6416 1 0 0 1 0 0 Bg
15.2029 -6.76875 -83.5548 -187.6671 492.6855 298.4443 Xm
7624.8037 -3394.7815 -83.5548 -187.6671 -7132.0332 3693.1875 Bc
0.939502 -0.418293 -83.5548 -187.6671 492.7705 298.4063 Bm
1.45195 -0.646451 -83.5548 -187.6671 493.7109 297.9883 Bm
2.04983 -0.912644 -83.5548 -187.6671 495.1621 297.3418 Bm
2.73309 -1.21685 -83.5548 -187.6671 497.2119 296.4287 Bm
2.47686 -1.10277 -83.5548 -187.6671 499.9453 295.2119 Bm
4.01424 -1.78725 -83.5548 -187.6671 502.4219 294.1094 Bm
1.45197 -0.646457 -83.5548 -187.6671 506.4365 292.3223 Bm
7624.8037 -3394.7815 -83.5548 -187.6671 507.8877 291.6758 Bc
f
0 BB
504.5195 285.2285 m
429.084 114.6787 L
432.0254 115.5 434.8145 116.3613 437.4375 117.2627 C
522.9688 291.1201 L
520.0596 299.9023 511.2725 304.7354 504.5195 285.2285 C
Bb
1 (Unnamed gradient 124) 467.1523 209.4961 -26 14.3867 1 0 0 1 0 0 Bg
12.9307 -6.30672 -92.4309 -189.5115 514.0322 305.6143 Xm
7518.6353 -3667.0837 -92.4309 -189.5115 -7004.5308 3972.6631 Bc
0.799088 -0.389741 -92.4309 -189.5115 514.1045 305.5791 Bm
1.23495 -0.602325 -92.4309 -189.5115 514.9043 305.1895 Bm
1.74347 -0.850348 -92.4309 -189.5115 516.1387 304.5869 Bm
2.32462 -1.13379 -92.4309 -189.5115 517.8828 303.7363 Bm
2.10668 -1.0275 -92.4309 -189.5115 520.207 302.6025 Bm
3.41429 -1.66526 -92.4309 -189.5115 522.3135 301.5752 Bm
1.23496 -0.60233 -92.4309 -189.5115 525.7275 299.9102 Bm
7518.6353 -3667.0837 -92.4309 -189.5115 526.9629 299.3076 Bc
f
0 BB
522.9688 291.1201 m
437.4375 117.2627 L
439.916 118.1143 442.2412 119.0039 444.4092 119.9277 C
538.6885 297.2646 L
533.9736 305.7598 528.4082 307.2256 522.9688 291.1201 C
Bb
1 (Unnamed gradient 124) 480.5352 212.8281 -28 11.7168 1 0 0 1 0 0 Bg
10.3453 -5.5007 -101.2904 -190.4995 531.7744 309.1943 Xm
7397.8486 -3933.5059 -101.2904 -190.4995 -6866.0156 4242.6689 Bc
0.639317 -0.339931 -101.2904 -190.4995 531.833 309.1631 Bm
0.988032 -0.525346 -101.2904 -190.4995 532.4717 308.8232 Bm
1.39488 -0.741671 -101.2904 -190.4995 533.46 308.2979 Bm
1.85983 -0.988889 -101.2904 -190.4995 534.8545 307.5566 Bm
1.68547 -0.89618 -101.2904 -190.4995 536.7148 306.5674 Bm
2.73163 -1.45243 -101.2904 -190.4995 538.4004 305.6719 Bm
0.988041 -0.525351 -101.2904 -190.4995 541.1318 304.2188 Bm
7397.8486 -3933.5059 -101.2904 -190.4995 542.1201 303.6934 Bc
f
0 BB
538.6885 297.2646 m
444.4092 119.9277 L
447.4102 121.207 450.1045 122.5537 452.457 123.9697 C
550.6299 303.0557 L
546.7158 309.1279 542.7607 311.1797 538.6885 297.2646 C
Bb
1 (Unnamed gradient 124) 492.168 215.5146 -29 9.64941 1 0 0 1 0 0 Bg
8.43957 -4.67813 -106.2109 -191.6095 545.6533 312.0039 Xm
7338.3198 -4067.6968 -106.2109 -191.6095 -6792.6191 4379.6743 Bc
0.521546 -0.289098 -106.2109 -191.6095 545.7012 311.9775 Bm
0.806023 -0.446786 -106.2109 -191.6095 546.2227 311.6885 Bm
1.13792 -0.630761 -106.2109 -191.6095 547.0283 311.2422 Bm
1.51722 -0.841011 -106.2109 -191.6095 548.166 310.6113 Bm
1.37498 -0.762165 -106.2109 -191.6095 549.6836 309.7695 Bm
2.22843 -1.23524 -106.2109 -191.6095 551.0586 309.0078 Bm
0.80603 -0.44679 -106.2109 -191.6095 553.2871 307.7725 Bm
7338.3198 -4067.6968 -106.2109 -191.6095 554.0938 307.3262 Bc
f
0 BB
558.8721 307.5166 m
556.6758 312.0586 552.6396 311.4424 550.6299 303.0557 C
452.457 123.9697 L
455.5234 125.8164 458.0205 127.7803 459.8652 129.8613 C
522.2568 253.7666 567.9521 311.7656 572.3457 321.4307 C
568.1289 321.0303 560.043 313.2295 558.8721 307.5166 C
Bb
1 (Unnamed gradient 124) 506.8984 225.751 -29 10.8984 1 0 0 1 0 0 Bg
9.53199 -5.28367 -113.8461 -205.3838 563.8213 328.4424 Xm
7350.6851 -4074.551 -113.8461 -205.3838 -6786.8101 4402.9644 Bc
0.589055 -0.326519 -113.8461 -205.3838 563.875 328.4131 Bm
0.910355 -0.504618 -113.8461 -205.3838 564.4639 328.0859 Bm
1.28522 -0.712407 -113.8461 -205.3838 565.374 327.582 Bm
1.71361 -0.949871 -113.8461 -205.3838 566.6592 326.8691 Bm
1.55296 -0.86082 -113.8461 -205.3838 568.373 325.9189 Bm
2.51687 -1.39513 -113.8461 -205.3838 569.9258 325.0586 Bm
0.910363 -0.504622 -113.8461 -205.3838 572.4434 323.6631 Bm
7350.6851 -4074.551 -113.8461 -205.3838 573.3535 323.1592 Bc
f
0 BB
344.6953 260.3135 m
323.7744 102.249 L
330.4219 102.4063 337.0078 102.6514 343.4893 102.9785 C
377.3438 262.7979 L
367.0078 273.832 357.1953 275.5898 344.6953 260.3135 C
Bb
1 (Unnamed gradient 124) 329.7051 189.7891 -12 31.5322 1 0 0 1 0 0 Bg
30.8432 -6.55592 -37.5951 -176.8708 348.8252 279.7412 Xm
8045.9531 -1710.2202 -37.5951 -176.8708 -7696.9551 1989.9243 Bc
1.90604 -0.405141 -37.5951 -176.8708 348.998 279.7041 Bm
2.94569 -0.626125 -37.5951 -176.8708 350.9043 279.2988 Bm
4.15865 -0.883948 -37.5951 -176.8708 353.8506 278.6729 Bm
5.54483 -1.17859 -37.5951 -176.8708 358.0088 277.7891 Bm
5.025 -1.0681 -37.5951 -176.8708 363.5537 276.6104 Bm
8.14398 -1.73106 -37.5951 -176.8708 368.5791 275.542 Bm
2.94571 -0.62613 -37.5951 -176.8708 376.7227 273.8115 Bm
8045.9531 -1710.2202 -37.5951 -176.8708 379.668 273.1846 Bc
f
0 BB
377.3438 262.7979 m
343.4893 102.9785 L
350.7393 103.3438 357.8594 103.8184 364.79 104.3955 C
405.9473 265.9219 L
397.6182 279.9844 387.2197 274.124 377.3438 262.7979 C
Bb
1 (Unnamed gradient 124) 359.4727 191.1172 -14 26.998 1 0 0 1 0 0 Bg
26.1961 -6.53142 -45.6853 -183.2336 383.0488 285.6777 Xm
8010.2505 -1997.1797 -45.6853 -183.2336 -7627.0542 2282.8203 Bc
1.61886 -0.403627 -45.6853 -183.2336 383.1963 285.6406 Bm
2.50187 -0.623785 -45.6853 -183.2336 384.8145 285.2373 Bm
3.53207 -0.880644 -45.6853 -183.2336 387.3164 284.6133 Bm
4.7094 -1.17419 -45.6853 -183.2336 390.8486 283.7334 Bm
4.26789 -1.06411 -45.6853 -183.2336 395.5586 282.5586 Bm
6.91694 -1.72459 -45.6853 -183.2336 399.8262 281.4951 Bm
2.50189 -0.62379 -45.6853 -183.2336 406.7432 279.7705 Bm
8010.2505 -1997.1797 -45.6853 -183.2336 409.2451 279.1455 Bc
f
0 BB
405.9473 265.9219 m
364.79 104.3955 L
370.8242 104.8994 376.7129 105.4824 382.4189 106.1475 C
433.3174 269.8066 L
423.6885 283.3516 415.1943 280.7158 405.9473 265.9219 C
Bb
1 (Unnamed gradient 124) 384.084 194.4082 -17 25.0381 1 0 0 1 0 0 Bg
23.944 -7.32043 -56.2397 -183.9517 412.9229 288.7344 Xm
7918.2847 -2420.8628 -56.2397 -183.9517 -7505.2266 2709.5562 Bc
1.47969 -0.452386 -56.2397 -183.9517 413.0576 288.6934 Bm
2.28678 -0.69914 -56.2397 -183.9517 414.5371 288.2412 Bm
3.22842 -0.987028 -56.2397 -183.9517 416.8242 287.542 Bm
4.30454 -1.31603 -56.2397 -183.9517 420.0527 286.5547 Bm
3.90099 -1.19265 -56.2397 -183.9517 424.3564 285.2383 Bm
6.3223 -1.93292 -56.2397 -183.9517 428.2578 284.0459 Bm
2.2868 -0.699145 -56.2397 -183.9517 434.5801 282.1133 Bm
7918.2847 -2420.8628 -56.2397 -183.9517 436.8672 281.4141 Bc
f
0 BB
433.3174 269.8066 m
382.4189 106.1475 L
388.0186 106.7988 393.4395 107.5293 398.6475 108.3369 C
462.1719 274.9893 L
453.7139 288.0391 443.46 286.7207 433.3174 269.8066 C
Bb
1 (Unnamed gradient 124) 406.1895 199.1357 -21 25.499 1 0 0 1 0 0 Bg
23.8054 -9.13803 -71.4443 -186.1188 442.7539 294.3887 Xm
7750.7617 -2975.2388 -71.4443 -186.1188 -7307.874 3269.5757 Bc
1.47112 -0.56471 -71.4443 -186.1188 442.8877 294.3369 Bm
2.27354 -0.87273 -71.4443 -186.1188 444.3584 293.7725 Bm
3.20973 -1.2321 -71.4443 -186.1188 446.6318 292.8994 Bm
4.27961 -1.64279 -71.4443 -186.1188 449.8418 291.668 Bm
3.8784 -1.48878 -71.4443 -186.1188 454.1221 290.0254 Bm
6.28569 -2.41285 -71.4443 -186.1188 458 288.5361 Bm
2.27356 -0.872738 -71.4443 -186.1188 464.2861 286.123 Bm
7750.7617 -2975.2388 -71.4443 -186.1188 466.5596 285.25 Bc
f
0 BB
462.1719 274.9893 m
398.6475 108.3369 L
403.8486 109.1436 408.835 110.0273 413.5693 110.9902 C
484.4316 279.9072 L
477.293 290.5293 469.0908 291.1133 462.1719 274.9893 C
Bb
1 (Unnamed gradient 124) 430.6357 200.6934 -23 19.3408 1 0 0 1 0 0 Bg
17.8033 -7.55706 -79.0989 -186.3454 470.8516 295.4365 Xm
7664.709 -3253.4763 -79.0989 -186.3454 -7193.7578 3548.8706 Bc
1.1002 -0.467009 -79.0989 -186.3454 470.9512 295.3945 Bm
1.70031 -0.721739 -79.0989 -186.3454 472.0518 294.9268 Bm
2.40046 -1.01893 -79.0989 -186.3454 473.752 294.2051 Bm
3.20059 -1.35857 -79.0989 -186.3454 476.1523 293.1865 Bm
2.90053 -1.2312 -79.0989 -186.3454 479.3535 291.8281 Bm
4.70088 -1.9954 -79.0989 -186.3454 482.2539 290.5967 Bm
1.70033 -0.721745 -79.0989 -186.3454 486.9541 288.6016 Bm
7664.709 -3253.4763 -79.0989 -186.3454 488.6543 287.8799 Bc
f
0 BB
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 1 1 0 0 1 1 255 79 79 0 50 Lb
(cream) Ln
0 A
u
0 O
0 J 0 j 1 w 4 M []0 d0 XR
374.5996 627.9619 m
368.5996 724.4116 72.7524 618.6108 230.0532 451.9565 C
307.4277 403.4922 295.522 453.6563 290.4209 471.5117 C
111.0137 542.0864 323.5811 725.7451 374.5996 627.9619 C
Bb
0 0 0 0 Bh
1 (Unnamed gradient 154) 355.5654 555.0386 -174.2067 171.8999 1 0 0 1 0 0 Bg
-171.0219 -17.3515 -17.3515 171.0219 355.5654 555.0386 Bm
f
0 BB
470.6797 431.5498 m
546.3545 524.2305 434.4971 559.8848 386.0293 575.188 C
272.0938 617.7017 372.9004 630.5137 y
280.2168 691.7334 291.2734 591.4019 V
298.0732 536.9849 457.9248 402.6416 470.6797 431.5498 C
Bb
1 (Unnamed gradient 64) 276.7261 574.4209 -17 237.4316 1 0 0 1 0 0 Bg
227.057 -69.4183 -66.8078 -218.5186 310.4092 684.5942 Xm
7845.2246 -2398.5259 -66.8078 -218.5186 -7508.0273 3074.9302 Bc
200.2693 -61.2285 -66.8078 -218.5186 337.1973 676.4043 Bm
7845.2246 -2398.5259 -66.8078 -218.5186 537.4668 615.1758 Bc
f
0 BB
470.6797 431.5498 m
546.3545 524.2305 427.2686 557.333 378.8008 572.6372 C
264.8662 615.1514 356.1055 636.2539 372.9004 630.5137 C
367.3701 640.0796 280.2168 691.7334 291.2734 591.4019 C
298.0732 536.9849 457.9248 402.6416 470.6797 431.5498 C
Bb
1 (Unnamed gradient 67) 371.9863 661.6406 -80 246.6191 1 0 0 1 0 0 Bg
42.8249 -242.8725 -261.3912 -46.0903 519.5674 687.6631 Xm
1443.6335 -8187.2559 -261.3912 -46.0903 -924.0659 8874.9189 Bc
42.8249 -242.8725 -261.3912 -46.0903 519.5674 687.6631 Bm
1443.6335 -8187.2559 -261.3912 -46.0903 562.3926 444.7905 Bc
f
0 BB
0 0 0 0 k
489.3867 430.6978 m
463.8301 536.0757 393.3047 493.6206 321.8809 571.8447 c
250.458 650.0708 347.3896 648.1577 374.5996 627.9619 C
274.2651 711.29 207.0952 570.9956 245.3574 525.0815 c
283.6191 479.1655 505.6221 363.748 489.3867 430.6978 c
f
489.3867 430.6978 m
466.8066 526.7227 389.0508 492.6631 317.6299 570.8892 c
246.2051 649.1147 348.0283 651.772 374.5996 627.9619 C
274.2651 711.29 207.0952 570.9956 245.3574 525.0815 c
283.6191 479.1655 505.1533 363.6377 489.3867 430.6978 c
Bb
1 (Unnamed gradient 156) 362.3262 410.2578 90 243.6167 1 0 0 1 0 0 Bg
-0.000011 243.6167 302.0581 0.000013 205.0947 410.2578 Xm
-0.000363 8304.9463 302.0581 0.000013 205.0952 -7853.6299 Bc
-0.000008 179.2909 302.0581 0.000013 205.0947 451.3169 Bm
-0.000363 8304.9463 302.0581 0.000013 205.0947 630.6079 Bc
f
0 BB
464.7285 430.6992 m
449.4238 497.8716 356.209 469.9468 297.6011 558.1816 c
243.9854 638.8999 330.1729 660.9116 372.9004 630.5137 C
272.5669 713.8413 207.0952 570.9956 245.3574 525.0815 c
283.6191 479.1655 480.0332 363.5273 464.7285 430.6992 c
Bb
1 (Unnamed gradient 121) 349.9355 410.2139 90 245.897 1 0 0 1 0 0 Bg
-0.000011 245.897 276.938 0.000012 205.0947 410.2139 Xm
-0.000362 8292.623 276.938 0.000012 205.0952 -7882.4092 Bc
-0.000011 245.897 276.938 0.000012 205.0947 410.2139 Bm
-0.000362 8292.623 276.938 0.000012 205.0947 656.1108 Bc
f
0 BB
0 0 0 0 k
304.876 454.5078 m
73.6016 575.2461 349.0898 728.2949 374.5996 627.9619 C
307.165 687.4243 230.5107 601.7715 264.9126 536.1343 C
280.5508 506.2979 357.5947 499.5728 397.5566 460.459 C
397.5566 450.2549 354.1895 445.1533 304.876 454.5078 C
f
304.876 454.5078 m
73.6016 575.2461 349.0898 728.2949 374.5996 627.9619 C
307.165 690.6128 226.2139 602.9897 260.6152 537.3506 C
285.6968 493.1362 357.5947 499.5728 397.5566 460.459 C
397.5566 450.2549 354.1895 445.1533 304.876 454.5078 C
Bb
1 (Unnamed gradient 52) 213.0649 555.0244 0 184.4917 1 0 0 1 0 0 Bg
184.4917 0 0 -287.1416 213.0649 730.2949 Xm
8248.5283 0 0 -287.1416 -8026.1357 730.2949 Bc
175.1635 0 0 -287.1416 222.3931 730.2949 Bm
8248.5283 0 0 -287.1416 397.5566 730.2949 Bc
f
0 BB
116.1152 486.3936 m
-22.9058 386.9111 159.479 274.6758 299.7744 326.9688 C
204.1187 379.2578 94.4321 431.5498 116.1152 486.3936 C
Bb
1 (Unnamed gradient 155) 299.7744 400.0371 -180 233.3447 1 0 0 1 0 0 Bg
-233.3447 0.00002 0.000019 215.7178 299.7744 272.6758 Xm
-8195.7734 0.000716 0.000019 215.7178 8452.2881 272.6748 Bc
-190.0843 0.000017 0.000019 215.7178 256.5142 272.6758 Bm
-8195.7734 0.000716 0.000019 215.7178 66.4297 272.6758 Bc
f
0 BB
418.0547 374.0713 m
332.874 411.9805 221.9253 460.9463 219.9922 463.2573 c
197.1338 490.583 186.4204 516.1279 184.3921 539.2324 C
-20.0776 472.0303 151.9321 368.1533 230.9014 347.3721 c
277.666 336.3193 290.4209 306.5596 330.3838 296.3574 c
370.3457 286.1543 403.5107 292.1074 412.0098 302.7334 c
420.5117 313.3623 425.6152 342.2715 442.6201 356.3027 c
446.1074 359.1777 435.9668 365.3633 418.0547 374.0713 c
Bb
1 (Unnamed gradient 130) 447.8057 380.627 -191 369.4268 1 0 0 1 0 0 Bg
-362.6393 70.49 41.3954 212.9608 426.9092 273.1221 Xm
-8192.8867 1592.5376 41.3954 212.9608 8574.9766 -1310.7031 Bc
-242.4385 47.1253 41.3954 212.9608 382.0889 281.834 Bm
-75.38 14.6524 41.3954 212.9608 139.6499 328.96 Bm
-8192.8867 1592.5376 41.3954 212.9608 64.2705 343.6113 Bc
f
0 BB
u
1 g
418.0547 374.0713 m
332.874 411.9805 221.9253 460.9463 219.9922 463.2573 c
197.2559 490.436 186.5396 515.8501 184.4277 538.8545 C
-11.2861 469.23 151.6616 377.4199 251.9468 353.752 c
298.7104 342.6963 293.6094 313.5752 333.5723 303.3711 c
373.5361 293.1689 397.1328 304.2217 405.6318 314.8486 c
414.1377 325.4805 425.6152 342.2715 442.6201 356.3027 c
446.1074 359.1777 435.9668 365.3633 418.0547 374.0713 c
f
U
418.0547 374.0713 m
332.874 411.9805 221.9253 460.9463 219.9922 463.2573 c
197.2285 490.4707 186.5117 515.9141 184.4194 538.9419 C
-0.404785 474.0571 154.3467 381.8516 254.4971 358.2158 c
301.2617 347.1611 293.6094 313.5752 333.5723 303.3711 c
373.5361 293.1689 397.1328 304.2217 405.6318 314.8486 c
414.1377 325.4805 425.6152 342.2715 442.6201 356.3027 c
446.1074 359.1777 435.9668 365.3633 418.0547 374.0713 c
Bb
1 (Unnamed gradient 98) 443.3018 419.1328 -180 345.1323 1 0 0 1 0 0 Bg
-345.1323 0.00003 0.000022 249.7729 443.3018 291.1689 Xm
-8342.1074 0.000729 0.000022 249.7729 8785.4082 291.168 Bc
-345.1323 0.00003 0.000022 249.7729 443.3018 291.1689 Bm
-8342.1074 0.000729 0.000022 249.7729 98.1694 291.1689 Bc
f
0 BB
251.3086 383.0859 m
256.9849 381.7422 261.0024 380.7295 263.7319 380.0059 C
255.5874 382.8311 240.8506 389.5391 250.0332 397.1152 c
265.0674 409.5186 177.4409 451.5024 188.9482 516.8882 C
186.6885 524.0142 185.2437 530.9526 184.5425 537.6865 C
56.5859 479.8462 152.1572 406.4883 251.3086 383.0859 c
Bb
1 (Unnamed gradient 129) 122.8916 458.8462 0 145.6712 1 0 0 1 0 0 Bg
145.6712 0 0 -161.6807 122.8916 539.6865 Xm
8085.1973 0 0 -161.6807 -7959.0322 539.6865 Bc
142.3977 0 0 -161.6807 126.165 539.6865 Bm
8085.1973 0 0 -161.6807 268.5625 539.6865 Bc
f
0 BB
304.876 454.5078 m
73.6016 575.2461 349.0898 728.2949 374.5996 627.9619 C
325.5547 700.9224 204.0713 612.6006 245.5688 532.9463 C
269.8018 480.6538 332.5088 494.897 372.4717 455.7832 C
372.4717 445.5801 354.1895 445.1533 304.876 454.5078 C
Bb
1 (Unnamed gradient 107) 374.5996 554.1294 -180 161.5352 1 0 0 1 0 0 Bg
-161.5352 0.000014 0.000025 287.1416 374.5996 443.1533 Xm
-8270.5996 0.000723 0.000025 287.1416 8645.1992 443.1528 Bc
-161.5352 0.000014 0.000025 287.1416 374.5996 443.1533 Bm
-8270.5996 0.000723 0.000025 287.1416 213.0645 443.1533 Bc
f
0 BB
204.5439 450.2549 m
254.2183 492.9292 330.6611 490.2056 397.5566 475.7642 C
501.2715 453.3745 579.6084 394.3252 480.8828 366.9316 C
417.9619 425.6001 214.7451 416.2451 204.5439 450.2549 C
Bb
1 (Unnamed gradient 66) 372.8193 355.5732 96 136.373 1 0 0 1 0 0 Bg
-14.2549 135.626 369.1303 38.7972 214.2363 338.9053 Xm
-864.3273 8223.5205 369.1303 38.7972 1078.5635 -7884.6162 Bc
-10.3308 98.2907 369.1303 38.7972 214.2363 338.9053 Bm
-3.9241 37.3353 369.1303 38.7972 203.9058 437.1958 Bm
-864.3273 8223.5205 369.1303 38.7972 199.9814 474.5313 Bc
f
0 BB
209.2183 448.1304 m
258.8936 490.8032 323.4326 481.7021 390.3271 467.2603 C
494.0439 444.8726 561.2344 399.6641 480.8828 366.9316 C
417.9619 425.6001 219.4238 414.1211 209.2183 448.1304 C
Bb
1 (Unnamed gradient 157) 391.2646 337.8125 108 170.7871 1 0 0 1 0 0 Bg
-52.7761 162.4282 308.726 100.3112 256.3574 293.9785 Xm
-2560.9058 7881.6567 308.726 100.3112 2803.3281 -7544.7891 Bc
-38.8409 119.5398 308.726 100.3112 242.4224 336.8672 Bm
-2560.9058 7881.6567 308.726 100.3112 203.5815 456.4072 Bc
f
0 BB
0 0 0 0 k
224.4771 464.9722 m
194.7261 481.4771 202.8433 525.9307 y
133.9712 480.8647 156.9292 437.501 v
179.8862 394.1367 309.9785 359.2734 340.5879 355.0264 c
371.1982 350.7734 403.5117 358.4268 427.3145 346.5225 C
429.8662 324.417 482.585 324.417 485.1357 329.5176 C
546.3545 430.6978 309.3984 417.8584 224.4771 464.9722 c
f
222.8828 461.4639 m
183.3467 482.2959 202.8433 525.9307 y
133.9712 480.8647 156.9292 437.501 v
179.8862 394.1367 309.9785 359.2734 340.5879 355.0264 c
371.1982 350.7734 403.5117 358.4268 427.3145 346.5225 C
429.8662 324.417 482.585 324.417 485.1357 329.5176 C
546.3545 430.6978 307.8047 414.3516 222.8828 461.4639 C
Bb
1 (Unnamed gradient 103) 323.6523 326.7441 90 199.186 1 0 0 1 0 0 Bg
-0.000009 199.186 416.3833 0.000018 131.9707 326.7441 Xm
-0.000359 8221.9795 416.3833 0.000018 131.9712 -7895.2354 Bc
-0.000007 168.9725 416.3833 0.000018 131.9707 326.7441 Bm
-0.000001 30.2135 416.3833 0.000018 131.9707 495.7168 Bm
-0.000359 8221.9795 416.3833 0.000018 131.9707 525.9302 Bc
f
0 BB
206.6689 439.2026 m
167.1309 460.0342 194.0801 522.2578 202.8433 525.9307 C
200.0327 525.4478 133.9712 480.8647 156.9292 437.501 c
179.8862 394.1367 309.9785 359.2734 340.5879 355.0264 c
371.1982 350.7734 403.5117 358.4268 427.3145 346.5225 C
429.8662 324.417 482.585 324.417 485.1357 329.5176 C
438.793 426.4487 325.2852 371.6055 206.6689 439.2026 C
Bb
1 (Unnamed gradient 129) 318.6133 326.7441 90 199.186 1 0 0 1 0 0 Bg
-0.000009 199.186 355.1646 0.000016 131.9707 326.7441 Xm
-0.000359 8216.9414 355.1646 0.000016 131.9712 -7885.7197 Bc
-0.000009 194.7099 355.1646 0.000016 131.9707 331.2207 Bm
-0.000359 8216.9414 355.1646 0.000016 131.9707 525.9307 Bc
f
0 BB
81.0415 435.3755 m
89.3306 408.5938 114.4141 355.0264 182.4604 338.0645 C
108.4648 339.7188 58.083 388.1846 81.0415 435.3755 C
Bb
1 (Unnamed gradient 94) 897.0469 1292.2427 90 122.4756 -0.9573 0.2891 0.2891 0.9573 14334.2393 -1262.4497 Bg
-35.4077 117.2459 -103.9404 -31.3895 184.375 338.6436 Xm
-2542.0698 8417.585 -103.9404 -31.3895 2726.2461 -8078.2822 Bc
-23.0747 76.4074 -103.9404 -31.3895 184.1763 339.3018 Bm
-2542.0698 8417.585 -103.9404 -31.3895 161.1016 415.709 Bc
f
0 BB
/BBAccumRotation (0.293268) XT
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_screens_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
